<?php

namespace common\models;

use Yii;
use yii\db\ActiveQuery;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "product".
 *
 * @property int $id
 * @property int $category_id
 * @property int $price
 * @property int $status
 * @property string $name_uz
 * @property string $name_ru
 * @property string $name_en
 * @property string|null $description_uz
 * @property string|null $description_ru
 * @property string|null $description_en
 * @property string $filename
 * @property int $created_at
 * @property int $updated_at
 *
 * @property Category $category
 */
class Product extends ActiveRecord
{


    /**
     * {@inheritdoc}
     */
    public static function tableName(): string
    {
        return 'product';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['description_uz', 'description_ru', 'description_en'], 'default', 'value' => null],
            [['created_at'], 'default', 'value' => time()],
            [['updated_at'], 'default', 'value' => time()],
            [['status'], 'default', 'value' => 1],
            [['category_id', 'name_uz', 'name_ru', 'name_en', 'filename', 'status', 'price'], 'required'],
            [['category_id', 'created_at', 'updated_at', 'price', 'status'], 'integer'],
            [['description_uz', 'description_ru', 'description_en'], 'string'],
            [['name_uz', 'name_ru', 'name_en', 'filename'], 'string', 'max' => 100],
            [['category_id'], 'exist', 'skipOnError' => true, 'targetClass' => Category::class, 'targetAttribute' => ['category_id' => 'id']],
        ];
    }

    public function beforeSave($insert): bool
    {
        if (!$this->isNewRecord){
            $this->updated_at = time();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels(): array
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'category_id' => Yii::t('app', 'Category name'),
            'status' => Yii::t('app', 'Status'),
            'price' => Yii::t('app', 'Price'),
            'name_uz' => Yii::t('app', 'Name Uz'),
            'name_ru' => Yii::t('app', 'Name Ru'),
            'name_en' => Yii::t('app', 'Name En'),
            'description_uz' => Yii::t('app', 'Description Uz'),
            'description_ru' => Yii::t('app', 'Description Ru'),
            'description_en' => Yii::t('app', 'Description En'),
            'filename' => Yii::t('app', 'Filename'),
            'created_at' => Yii::t('app', 'Created at'),
            'updated_at' => Yii::t('app', 'Updated at'),
        ];
    }

    /**
     * Gets query for [[Category]].
     *
     * @return ActiveQuery
     */
    public function getCategory(): ActiveQuery
    {
        return $this->hasOne(Category::class, ['id' => 'category_id']);
    }

}
